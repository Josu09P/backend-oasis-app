name: CI/CD - DecorHouse Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-deploy:
    runs-on: self-hosted  # Tu runner local en Linux con Docker y Maven

    env:
      DOCKER_PROJECT_NAME: decorhouse
      APP_CONTAINER_NAME: decor-house-app
      DB_CONTAINER_NAME: mysql-decor-house-prod
      DB_NAME: decor_house_prod
      DB_USER: root
      DB_PASSWORD: admin123

    steps:
      - name: üîÑ Clonar repositorio
        uses: actions/checkout@v3

      - name: üßπ Limpiar Workspace
        run: |
          sudo rm -rf sql/target || true

      - name: üì¶ Construir con Maven (sin tests)
        run: mvn -DskipTests clean package

      - name: üß™ Ejecutar pruebas (sin compilar otra vez)
        run: mvn test -DskipTests

      - name: üìä An√°lisis SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: ‚úÖ Esperar Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 10
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: üê≥ Desplegar contenedores Docker
        working-directory: ./docker
        run: |
          docker-compose -p $DOCKER_PROJECT_NAME down -v --remove-orphans || true
          docker-compose -p $DOCKER_PROJECT_NAME up -d --build

      - name: üõ†Ô∏è Inicializar base de datos
        run: |
          echo "‚è≥ Esperando que MySQL est√© listo..."
          sleep 30
          docker exec -i $DB_CONTAINER_NAME mysql -u$DB_USER -p$DB_PASSWORD $DB_NAME < sql/init.sql

      - name: üîç Verificar tablas en MySQL
        run: |
          docker exec $DB_CONTAINER_NAME mysql -u$DB_USER -p$DB_PASSWORD -e "USE $DB_NAME; SHOW TABLES;"

      - name: üìÑ Mostrar logs de la aplicaci√≥n
        run: |
          sleep 30
          docker logs --tail 100 $APP_CONTAINER_NAME
