name: CI/CD Decor House üè†

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  DOCKER_PROJECT_NAME: 'decor-house'
  APP_CONTAINER_NAME: 'decor-house-app'
  DB_CONTAINER_NAME: 'mysql-decor-house-prod'
  DB_NAME: 'decor_house_prod'
  DB_USER: 'root'
  DB_PASSWORD: 'admin123'
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: 'http://localhost:9000'  # O cambia al URL de tu instancia

jobs:
  build-test-sonar-docker:
    runs-on: self-hosted

    steps:
      - name: üîÑ Checkout del repositorio
        uses: actions/checkout@v4

      - name: ‚òï Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: üì¶ Build y Tests con Maven
        run: mvn -B clean verify

      - name: üîç An√°lisis con SonarQube
        run: mvn sonar:sonar -Dsonar.projectKey=decor-house \
                             -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
                             -Dsonar.login=${{ env.SONAR_TOKEN }}

      - name: üê≥ Despliegue con Docker Compose
        run: |
          echo "üßº Limpiando contenedores anteriores..."
          cd docker

          docker compose -p $DOCKER_PROJECT_NAME down -v --remove-orphans || echo "Nada que bajar"

          echo "üèóÔ∏è Construyendo e iniciando servicios..."
          docker compose -p $DOCKER_PROJECT_NAME up -d --build

          echo "‚è≥ Esperando a que la base de datos se estabilice..."
          sleep 30

          echo "üíæ Ejecutando script SQL de inicializaci√≥n..."
          cat ../sql/init.sql | docker exec -i $DB_CONTAINER_NAME mysql -u$DB_USER -p$DB_PASSWORD $DB_NAME

          echo "üîç Estado de los contenedores:"
          docker compose -p $DOCKER_PROJECT_NAME ps

          echo "üìÑ √öltimos logs de la app:"
          docker logs --tail 100 $APP_CONTAINER_NAME
